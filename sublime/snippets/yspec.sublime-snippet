<snippet>
    <content><![CDATA[/* global modules:false */

/**
 * @spec ${TM_FILENAME/^(\w)|(?:\.(\w*))/(?1$1:)/g}
 */

modules.define(
    'spec',
    ['${TM_FILENAME/^(\w)|(?:\.(\w*))/(?1$1:)/g}', 'i-bem__dom', 'jquery', 'BEMHTML', 'sinon'],
    function(provide, ${TM_FILENAME/^(\w)|(?:\.(\w*))/(?1\u$1:)/g}, BEMDOM, \$, BEMHTML, sinon) {

describe('${TM_FILENAME/^(\w)|(?:\.(\w*))/(?1$1:)/g}', function() {
    var ${TM_FILENAME/^(\w)|(?:\.(\w*))/(?1$1:)/g};

    beforeEach(function() {
        ${TM_FILENAME/^(\w)|(?:\.(\w*))/(?1$1:)/g} = BEMDOM.init(\$(BEMHTML.apply({ block : '${TM_FILENAME/^(\w)|(?:\.(\w*))/(?1$1:)/g}' })).appendTo('body'))
            .bem('${TM_FILENAME/^(\w)|(?:\.(\w*))/(?1$1:)/g}');
    });

    afterEach(function() {
        BEMDOM.destruct(${TM_FILENAME/^(\w)|(?:\.(\w*))/(?1$1:)/g}.domElem);
    });

    describe('click', function() {
        it('should emit click on release on self', function() {
            var spy = sinon.spy();
            ${TM_FILENAME/^(\w)|(?:\.(\w*))/(?1$1:)/g}
                .on('click', spy)
                .domElem
                    .trigger('pointerpress')
                    .trigger('pointerrelease');

            spy.should.have.been.calledOnce;
        });
    });
});

provide();

});

]]></content>
    <tabTrigger>yspec</tabTrigger>
    <scope>source.js</scope>
    <description>ymodules spec</description>
</snippet>
